apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      containers:
      - image: registry.cn-hangzhou.aliyuncs.com/njuics/ldap-oauth:52ae50fc0d004d69cf3b012a92ee3b863f5fba4e-dirty
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        ports:
        - name: https
          containerPort: 5556
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  namespace: kube-system
data:
  config.yaml: |
    issuer: http://dlkit.nju.edu.cn/auth
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
      allowedOrigins:
      - "http://localhost:8000"
    frontend:
      dir: web/njuics
      theme: njuics
    connectors:
    - type: ldap
      name: OpenLDAP
      id: ldap
      config:
        host: openldap.openldap:389
        insecureNoSSL: true
        bindDN: cn=admin,dc=njuics,dc=cn
        bindPW: dr0w55@P#nap
        usernamePrompt: Email Address
        userSearch:
          baseDN: ou=People,dc=njuics,dc=cn
          filter: "(objectClass=person)"
          username: uid
          idAttr: DN
          emailAttr: mail
          nameAttr: uid
        groupSearch:
          baseDN: ou=Groups,dc=njuics,dc=cn
          filter: "(objectClass=groupOfNames)"
          userAttr: DN
          groupAttr: member
          nameAttr: cn
    staticClients:
    - id: example-app
      redirectURIs:
      - 'http://127.0.0.1:5555/callback'
      name: 'Example App'
      secret: ZXhhbXBsZS1hcHAtc2VjcmV0
    - id: dlkit
      redirectURIs:
      - 'http://dlkit.nju.edu.cn/oauth/callback'
      name: 'DLKit'
      secret: jxoTyQ+8P17DQP2A5Mv09mJHPgw4HZdu
    - id: aikit
      redirectURIs:
      - 'http://aikit.nju.edu.cn/oauth/callback'
      name: 'AIKit'
      secret: ed60434ca817a0e6d2b2d38828aca3c3
    - id: dc
      secret: dcos-nap
      redirectURIs:
      - 'http://localhost'
    - id: dlkit-localhost
      redirectURIs:
      - 'http://localhost:8000/oauth/callback'
      name: 'DLKit-localhost'
      secret: dxprxwKUpQzvMc6H
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: kube-system
spec:
  type: NodePort
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
    nodePort: 32000
  selector:
    app: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: dex
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex           # Service account assigned to the dex pod, created above
  namespace: kube-system  # The namespace dex is running in
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dex
  namespace: kube-system
spec:
  rules:
  - host: dlkit.nju.edu.cn
    http:
      paths:
      - backend:
          serviceName: dex
          servicePort: dex
        path: /auth
